# We don't need sudo as such, but setting sudo: required allows us to run on
# the faster machines which means that the builds complete much faster (in
# about half the time). For comparison, here are two builds on the two
# different machines:
# - With `sudo: false`: https://travis-ci.org/opbeat/opbeat-node/builds/252301998
# - With `sudo: required`: https://travis-ci.org/opbeat/opbeat-node/builds/252302576
sudo: required

language: node_js

services:
  - mysql
  - mongodb
  - redis-server
  - postgresql
  - elasticsearch
  - cassandra

before_script:
  - npm install -g npm@latest
  - wait-on tcp:9200

node_js:
  - '10'
  - '8'
  - '6'

_stage_dependencies: &_stage_dependencies
  if: type IN (cron, pull_request) AND NOT branch =~ ^greenkeeper/.*
  script: tav --quiet

_stage_nightly: &_stage_nightly
  if: type = cron
  env: NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/nightly/

_stage_nightly_no_async_hooks: &_stage_nightly_no_async_hooks
  if: type = cron
  env:
    - ELASTIC_APM_ASYNC_HOOKS=0
    - NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/nightly/

_stage_rc: &_stage_rc
  if: type = cron
  env: NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/rc/

_stage_rc_no_async_hooks: &_stage_rc_no_async_hooks
  if: type = cron
  env:
    - ELASTIC_APM_ASYNC_HOOKS=0
    - NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/rc/

jobs:
  fast_finish: true

  include:

    ###########################################
    #                TEST STAGE               #
    ###########################################

    # Disable Async Hooks
    -
      node_js: '10'
      env: ELASTIC_APM_ASYNC_HOOKS=0
    -
      node_js: '8'
      env: ELASTIC_APM_ASYNC_HOOKS=0

    # Docs
    -
      script: npm run docs
      name: "Build Docs"
      perl: '5.26'

    # Commit Messages
    -
      node_js: 'lts/*'
      name: "Lint Commit Messages"
      script: commitlint-travis

    # Coverage
    -
      node_js: 'lts/*'
      name: "Code Coverage"
      script:
        - npm run coverage
        - ./node_modules/.bin/nyc report --reporter=lcov > coverage.lcov
        - npm install -g codecov
        - codecov

    ###########################################
    #            DEPENDENCY STAGE             #
    ###########################################

    # Node.js 10
    - stage: dependencies
      node_js: '10'
      env: TAV=generic-pool,mysql,mysql2,redis,koa-router,handlebars,mongodb-core
      <<: *_stage_dependencies
    -
      node_js: '10'
      env: TAV=ioredis,pg,cassandra-driver,restify
      <<: *_stage_dependencies
    -
      node_js: '10'
      env: TAV=mimic-response,got,bluebird
      <<: *_stage_dependencies
    -
      node_js: '10'
      env: TAV=knex,ws,graphql,express-graphql,elasticsearch,hapi,express,express-queue
      <<: *_stage_dependencies

    # Node.js 8
    -
      node_js: '8'
      env: TAV=generic-pool,mysql,mysql2,redis,koa-router,handlebars,mongodb-core
      <<: *_stage_dependencies
    -
      node_js: '8'
      env: TAV=ioredis,pg,cassandra-driver,restify
      <<: *_stage_dependencies
    -
      node_js: '8'
      env: TAV=mimic-response,got,bluebird
      <<: *_stage_dependencies
    -
      node_js: '8'
      env: TAV=knex,ws,graphql,express-graphql,elasticsearch,hapi,express,express-queue
      <<: *_stage_dependencies

    # Node.js 6
    -
      node_js: '6'
      env: TAV=generic-pool,mysql,mysql2,redis,koa-router,handlebars,mongodb-core
      <<: *_stage_dependencies
    -
      node_js: '6'
      env: TAV=ioredis,pg,cassandra-driver,restify
      <<: *_stage_dependencies
    -
      node_js: '6'
      env: TAV=mimic-response,got,bluebird
      <<: *_stage_dependencies
    -
      node_js: '6'
      env: TAV=knex,ws,graphql,express-graphql,elasticsearch,hapi,express,express-queue
      <<: *_stage_dependencies

    ###########################################
    #        NODE.JS PRE-RELEASE STAGE        #
    ###########################################

    # Nightlies
    - stage: Node.js pre-releases
      node_js: '11'
      name: "Node.js: 11-nightly"
      <<: *_stage_nightly
    -
      node_js: '10'
      name: "Node.js: 10-nightly"
      <<: *_stage_nightly
    -
      node_js: '8'
      name: "Node.js: 8-nightly"
      <<: *_stage_nightly
    -
      node_js: '6'
      name: "Node.js: 6-nightly"
      <<: *_stage_nightly

    # Nightlies - No async hooks
    - stage: Node.js pre-releases
      node_js: '11'
      name: "Node.js: 11-nightly (no async hooks)"
      <<: *_stage_nightly_no_async_hooks
    -
      node_js: '10'
      name: "Node.js: 10-nightly (no async hooks)"
      <<: *_stage_nightly_no_async_hooks
    -
      node_js: '8'
      name: "Node.js: 8-nightly (no async hooks)"
      <<: *_stage_nightly_no_async_hooks

    # Release Candidates
    -
      node_js: '10'
      name: "Node.js: 10-rc"
      <<: *_stage_rc
    -
      node_js: '8'
      name: "Node.js: 8-rc"
      <<: *_stage_rc
    -
      node_js: '6'
      name: "Node.js: 6-rc"
      <<: *_stage_rc

    # Release Candidates - No async hooks
    -
      node_js: '10'
      name: "Node.js: 10-rc (no async hooks)"
      <<: *_stage_rc_no_async_hooks
    -
      node_js: '8'
      name: "Node.js: 8-rc (no async hooks)"
      <<: *_stage_rc_no_async_hooks

addons:
  apt:
    packages:
     - xsltproc
     - libxml2-utils

notifications:
  email:
    - watson@elastic.co
  slack:
    secure: Jq9ST6TYsZZtPgUdn60rZCfcclNF1cXaCqemt9ZKvqlDie9kbyJjU9t0K+EFdlQXgzM5sGAC+okRO9c29zMDuWvsuY6wb5K2p9j1cxfOn1FTc4xcxh/fKelu1Q7nGaMOIPvQuoI/TQBo4pwACyjli+ohz7DMVMRcans6GR+P0S8=
    on_success: change
    on_failure: change
    on_pull_requests: false
