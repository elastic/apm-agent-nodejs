name: release

on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write
  id-token: write
  pull-requests: read

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 'v16.20.2'

      - name: Log in to the Elastic Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ secrets.ELASTIC_DOCKER_REGISTRY }}
          username: ${{ secrets.ELASTIC_DOCKER_USERNAME }}
          password: ${{ secrets.ELASTIC_DOCKER_PASSWORD }}

      - run: make -C .ci env

      - run: make -C .ci dist

      - run: make -C .ci push-docker

      - uses: elastic/oblt-actions/aws/auth@v1.10.0
        with:
          aws-account-id: "267093732750"

      - name: Publish AWS lambda
        run: make -C .ci publish-in-all-aws-regions create-arn-file
        env:
          GH_TOKEN: ${{ github.token }}

      - run: make -C .ci github-release
        env:
          GH_TOKEN: ${{ github.token }}

      - name: npm publish
        run: |-
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm publish --tag="latest-3" --provenance

      - if: always()
        uses: elastic/oblt-actions/slack/notify-result@v1
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: "#apm-agent-node"
          message: '[${{ github.repository }}] Release *${{ github.ref_name }}*'
