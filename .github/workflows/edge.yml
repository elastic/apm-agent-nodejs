---
name: Edge

# The "Edge Test" is a run of the agent test suite with pre-release builds
# of node.js, if available and useful. "Pre-release" builds are release
# candidate (RC) and "nightly" node.js builds.

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.asciidoc'
  issue_comment:
    types: [created]

# limit the access of the generated GITHUB_TOKEN
permissions:
  contents: read

jobs:
  # The node.js project produces "nightly" builds of the tip of *some*
  # development branches. They get uploaded to:
  # https://nodejs.org/download/nightly/
  #
  # My observation is that nightly builds are only made for the next major
  # version *up to the point there is a release of that version*.  For example,
  # at time of writing, there is not yet a v17 release of node, and
  # "v17.0.0-nightly*" builds are being created. Once a v17.0.0 release has been
  # made, these will stop and there will be no value in testing v17 nightlies.
  #
  test-nightly:
    # Builds running on main or comment with /test-nightly
    if: |
      github.event.issue.pull_request
      && startsWith(github.event.comment.body, '/test-rc')
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        node: [ "20" ]
        contextManager: [ 'patch', '' ]
    steps:
      - id: sha-for-pr
        if: github.event.issue.pull_request
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha
      - uses: actions/checkout@v3
        if: github.event.issue.pull_request
        with:
          ref: ${{ steps.sha-for-pr.outputs.result }}
      - uses: actions/checkout@v3
        if: ${{ github.ref == 'refs/heads/main' }}
      - run: .ci/scripts/test.sh -b "nightly" "${{ matrix.node }}"
        env:
          VERSION: ${{ matrix.node }}
          ELASTIC_APM_CONTEXT_MANAGER: ${{ matrix.contextManager }}

  # This should list all active Node.js major versions listed at:
  # https://nodejs.org/en/about/releases/
  #
  # The node.js project *sometimes* produces "rc" builds leading up to a new
  # release. They get uploaded to: https://nodejs.org/download/rc/
  test-rc:
    # Builds running on main or comment with /test-rc
    if: |
      github.event.issue.pull_request
      && startsWith(github.event.comment.body, '/test-rc')
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        node:
          - "19"
          - "18"
          - "16"
          - "14"
        contextManager: [ 'patch', '' ]
    steps:
      - id: sha-for-pr
        if: github.event.issue.pull_request
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha
      - uses: actions/checkout@v3
        if: github.event.issue.pull_request
        with:
          ref: ${{ steps.sha-for-pr.outputs.result }}
      - uses: actions/checkout@v3
        if: ${{ github.ref == 'refs/heads/main' }}
      - run: .ci/scripts/test.sh -b "rc" "${{ matrix.node }}"
        env:
          VERSION: ${{ matrix.node }}
          ELASTIC_APM_CONTEXT_MANAGER: ${{ matrix.contextManager }}
