{"version":3,"file":"throw-an-error-with-sourcemap.js","sourceRoot":"./no-such-dir/","sources":["throw-an-error-with-sourcemap.ts"],"names":[],"mappings":";AAAA,0EAA0E;AAC1E,4EAA4E;;;;;AAE5E,qDAAgC;AAChC,WAAK,CAAC,KAAK,CAAC;IACV,WAAW,EAAE,oCAAoC;IACjD,qBAAqB,EAAE,IAAI;IAC3B,eAAe,EAAE,GAAG;IACpB,aAAa,EAAE,KAAK;IACpB,QAAQ,EAAE,KAAK;IACf,sDAAsD;IACtD,iBAAiB,EAAE,IAAI;CACxB,CAAC,CAAA;AAEF,SAAS,IAAI,CAAC,GAAW;IACvB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAA;AACtB,CAAC;AAED,IAAI,CAAC,MAAM,CAAC,CAAA","sourcesContent":["// TypeScript code that throws an error. We will compile to a JS file with\n// a sourcemap to test that stacktrace handling uses the sourcemap properly.\n\nimport agent from '../../../../'\nagent.start({\n  serviceName: 'test-throw-an-error-with-sourcemap',\n  logUncaughtExceptions: true,\n  metricsInterval: '0',\n  centralConfig: false,\n  logLevel: 'off',\n  // This tells the agent to catch unhandled exceptions:\n  captureExceptions: true\n})\n\nfunction main(msg: string) {\n  throw new Error(msg)\n}\n\nmain('boom')\n"]}