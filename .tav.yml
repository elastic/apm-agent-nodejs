# This file is used by tool TAV - Test All Versions.
# See: https://github.com/watson/test-all-versions

generic-pool:
  versions: ^2.0.0 || ^3.1.0
  commands: node test/instrumentation/modules/generic-pool.test.js

mimic-response:
  versions: ^1.0.0
  commands:
    - node test/instrumentation/modules/mimic-response.test.js
    - node test/instrumentation/modules/http/github-179.test.js

# Testing 'got' was initially added to test an issue in its usage of
# mimic-response@1.0.0. However, this test case serves to sanity test 'got'
# usage with the agent. Got@12 is pure ESM, so cannot currently be tested with
# the current test script.
got-v4-v9:
  name: got
  versions: '>=4.0.0 <9.0.0'
  node: '>=5'
  commands: node test/instrumentation/modules/http/github-423.test.js
got-v9:
  name: got
  versions: ^9.0.0
  node: '>=8.3'
  commands: node test/instrumentation/modules/http/github-423.test.js
got-v10-v12:
  name: got
  versions: '>=10.0.0 <10.5.1 || >10.5.1 <12' # v10.5.1 is broken
  node: '>=10.16.0'
  commands: node test/instrumentation/modules/http/github-423.test.js

mysql:
  versions: ^2.0.0
  commands:
    - node test/instrumentation/modules/mysql/mysql.test.js
    - node test/instrumentation/modules/mysql/pool-release-1.test.js

# mysql2
# - v1.6.2 is broken: https://github.com/sidorares/node-mysql2/issues/869
# - v2.2.3 has a github dep ("@types/mysql": "types/mysql") that hits
#   npm v6 install issue https://github.com/npm/cli/issues/4896
mysql2-old:
  name: mysql2
  versions: '>=1.0.0 <1.6.0'
  commands:
    - node test/instrumentation/modules/mysql2/mysql.test.js
    - node test/instrumentation/modules/mysql2/pool-release-1.test.js
mysql2-new:
  name: mysql2
  versions: '>=1.6.0 <1.6.2 || >=1.6.3 <2.2.3 || >=2.2.4 <3'
  node: '>=6.0.0'
  commands:
    - node test/instrumentation/modules/mysql2/mysql.test.js
    - node test/instrumentation/modules/mysql2/pool-release-1.test.js

redis:
  versions: '>=2.0.0 <4.0.0'
  commands: node test/instrumentation/modules/redis.test.js

# We want these version ranges:
#   # v3.1.3 is broken in older versions of Node because of https://github.com/luin/ioredis/commit/d5867f7c7f03a770a8c0ca5680fdcbfcaf8488e7
#   versions: '>=2 <3.1.3 || >3.1.3 <4'
#   versions: '^4.0.0'
# However, there are a *lot* of ioredis releases, so we statically list a
# subset (the first, plus then the latest in each major.minor).
ioredis-v2-v4:
  name: ioredis
  versions: '2.0.0 || 2.0.1 || 2.1.0 || 2.2.0 || 2.3.1 || 2.4.3 || 2.5.0 || 3.0.0 || 3.1.4 || 3.2.2 || >3.2.2 <4'
  commands: node test/instrumentation/modules/ioredis.test.js
ioredis-v4-v5:
  name: ioredis
  versions: '4.0.0 || 4.0.2 || 4.1.0 || 4.2.3 || 4.3.1 || 4.4.0 || 4.5.1 || 4.6.3 || 4.7.0 || 4.8.0 || 4.9.0 || 4.9.5 || 4.10.4 || 4.11.2 || 4.12.2 || 4.13.1 || 4.14.4 || 4.15.1 || 4.16.3 || 4.17.3 || 4.18.0 || 4.19.4 || 4.20.0 || 4.21.0 || 4.22.0 || 4.23.1 || 4.24.6 || 4.25.0 || 4.26.0 || 4.27.11 || ^4.28.0'
  node: '>=6'
  commands: node test/instrumentation/modules/ioredis.test.js
ioredis:
  name: ioredis
  versions: '^5.0.0'
  node: '>=12.22.0'
  commands: node test/instrumentation/modules/ioredis.test.js

pg-old-node:
  name: pg
  # We want this version range:
  #   versions: '>=4 <9'
  # but only the latest MAJOR.MINOR.x to reduce the test matrix.
  #
  # Maintenance note: This should be updated for newer MAJOR.MINOR releases.
  versions: '4.0.0 || 4.1.1 || 4.2.0 || 4.3.0 || 4.4.6 || 4.5.7 || 5.0.0 || 5.1.0 || 5.2.1 || 6.0.5 || 6.1.6 || 6.2.5 || 6.3.3 || 6.4.2 || 7.0.3 || 7.1.2 || 7.2.0 || 7.3.0 || 7.4.3 || 7.5.0 || 7.6.1 || 7.7.1 || 7.8.2 || 7.9.0 || 7.10.0 || 7.11.0 || 7.12.1 || 7.13.0 || 7.14.0 || 7.15.2 || 7.16.1 || 7.17.1 || 7.18.2 || 8.0.3 || 8.1.0 || 8.2.2 || 8.3.3 || 8.4.2 || 8.5.1 || 8.6.0 || >8.6.0 <9'
  node: '<14'
  peerDependencies:
    - bluebird@^3.0.0
    - knex@^0.17.3
  commands:
    - node test/instrumentation/modules/pg/pg.test.js
    - node test/instrumentation/modules/pg/knex.test.js
pg-new-node:
  name: pg
  # We want this version range:
  #   versions: '>=8.0.3 <9' # Prior versions didn't work in Node.js 14
  # but only the latest MAJOR.MINOR.x to reduce the test matrix.
  #
  # Maintenance note: This should be updated for newer MAJOR.MINOR releases.
  versions: '8.0.3 || 8.1.0 || 8.2.2 || 8.3.3 || 8.4.2 || 8.5.1 || 8.6.0 || >8.6.0 <9'
  node: '>=14'
  peerDependencies:
    - bluebird@^3.0.0
    - knex@^0.17.3
  commands:
    - node test/instrumentation/modules/pg/pg.test.js
    - node test/instrumentation/modules/pg/knex.test.js
mongodb-core:
  versions: '>=1.2.19 <4'
  commands: node test/instrumentation/modules/mongodb-core.test.js

mongodb-3:
  name: mongodb
  versions: '>=3.3 <4'
  commands: node test/instrumentation/modules/mongodb.test.js
mongodb-4:
  name: mongodb
  versions: '>=4 <5'
  node: '>=12'
  commands: node test/instrumentation/modules/mongodb.test.js

bluebird:
  versions: '>=2 <4'
  commands:
    - node test/instrumentation/modules/bluebird/bluebird.test.js
    - node test/instrumentation/modules/bluebird/cancel.test.js
# knex (https://github.com/knex/knex/blob/master/UPGRADING.md)
# - knex 0.18.0 min supported node is v8
# - knex 0.21.0 min supported node is v10
# - knex 1.0.0 min supported node is v12
knex-v0.9-v0.17:
  name: knex
  # v0.16.4 accidentally dropped support for Node.js 6
  versions: ^0.16.5 || <0.16.4 >=0.16.0 || ^0.15.0 || ^0.14.0 || ^0.13.0 || ^0.12.5 || <0.12.4 >0.11.6 || <0.11.6 >0.9.0
  commands: node test/instrumentation/modules/pg/knex.test.js
knex-v0.17-v0.21:
  name: knex
  node: '>=8.6.0'
  versions: '>=0.17 <0.21'
  commands: node test/instrumentation/modules/pg/knex.test.js
knex-v0.21-v1:
  name: knex
  node: '>=10.22.0'
  versions: '>=0.21 <1' # Use '<1' to catch a 0.96.x release if there ever is one.
  commands: node test/instrumentation/modules/pg/knex.test.js
ws-old:
  name: ws
  versions: '>=1 <7'
  commands: node test/instrumentation/modules/ws.test.js
ws-new:
  name: ws
  node: '>=8.6.0'
  versions: '>=7 <8'
  commands: node test/instrumentation/modules/ws.test.js

graphql-v0.7-v16:
  name: graphql
  preinstall: npm uninstall express-graphql
  versions: '>=0.7.0 <0.11.0 || >=0.11.1 <16'
  commands: node test/instrumentation/modules/graphql.test.js
graphql:
  name: graphql
  preinstall: npm uninstall express-graphql
  node: '>=12'
  versions: '>=16.0.0 <17'
  commands: node test/instrumentation/modules/graphql.test.js

express:
  versions: '>=4'
  commands:
    - node test/instrumentation/modules/express/basic.test.js
    - node test/instrumentation/modules/express/capture-exceptions-off.test.js
    - node test/instrumentation/modules/express/capture-exceptions-on.test.js
    - node test/instrumentation/modules/express/set-framework.test.js

# - Skip express-graphql@0.10.0 because it briefly, accidentally introduced
#   syntax that required ES2020 (node v14).
# - Limit to node >=10.4 because of a known issue.
#   https://github.com/elastic/apm-agent-nodejs/issues/2516
express-graphql-0.10.1_graphql-14:
  name: express-graphql
  preinstall: npm uninstall apollo-server-express
  peerDependencies: graphql@^14.6.0
  versions: '>=0.10.1 <0.11.0'
  node: '>=10.4'
  commands: node test/instrumentation/modules/express-graphql.test.js
express-graphql-0.10.1_graphql-15:
  name: express-graphql
  preinstall: npm uninstall apollo-server-express
  peerDependencies: graphql@^15.0.0
  versions: '>=0.10.1 <0.11.0'
  node: '>=10.4'
  commands: node test/instrumentation/modules/express-graphql.test.js

express-graphql-0.11.0_graphql-14:
  name: express-graphql
  preinstall: npm uninstall apollo-server-express
  peerDependencies: graphql@^14.7.0
  versions: '>=0.11.0 <0.13.0'
  node: '>=10.4'
  commands: node test/instrumentation/modules/express-graphql.test.js
express-graphql-0.11.0_graphql-15:
  name: express-graphql
  preinstall: npm uninstall apollo-server-express
  peerDependencies: graphql@^15.3.0
  versions: '>=0.11.0 <0.13.0'
  node: '>=10.4'
  commands: node test/instrumentation/modules/express-graphql.test.js

apollo-server-express-2_graphql-14:
  name: apollo-server-express
  preinstall: npm uninstall express-graphql
  peerDependencies: graphql@^14.0.0
  # We want this version range:
  #   versions: '>=2.9.16 <2.2 || >= 2.3.2 <3'
  # but only the latest MAJOR.MINOR.x to reduce the test matrix.
  #
  # Maintenance note: This should be updated for newer MAJOR.MINOR releases.
  versions: '2.9.16 || 2.10.1 || 2.11.0 || 2.12.0 || 2.13.1 || 2.14.5 || 2.15.1 || 2.16.1 || 2.17.0 || 2.18.2 || 2.19.2 || 2.20.0 || 2.21.2 || 2.22.2 || 2.23.0 || 2.24.1 || 2.25.0 || >2.25.x <3'
  node: '>=6'
  commands: node test/instrumentation/modules/apollo-server-express.test.js
apollo-server-express-2_graphql-15:
  name: apollo-server-express
  preinstall: npm uninstall express-graphql
  peerDependencies: graphql@^15.0.0
  # We want this version range (2.12.0 was the first release of
  # apollo-server-express after graphql@15 was released):
  #   versions: '>= 2.12.0 <3'
  # but only the latest MAJOR.MINOR.x to reduce the test matrix.
  #
  # Maintenance note: This should be updated for newer MAJOR.MINOR releases.
  versions: '2.15.1 || 2.16.1 || 2.17.0 || 2.18.2 || 2.19.2 || 2.20.0 || 2.21.2 || 2.22.2 || 2.23.0 || 2.24.1 || 2.25.0 || >2.25.x <3'
  # Per https://github.com/graphql/graphql-js/releases/tag/v15.0.0
  # graphql v15 supports node v8 as a minimum.
  node: '>=8'
  commands: node test/instrumentation/modules/apollo-server-express.test.js
apollo-server-express-3_graphql-15:
  name: apollo-server-express
  preinstall: npm uninstall express-graphql
  peerDependencies: graphql@^15.0.0
  # We want this version range:
  #   versions: '^3.0.0'
  # but only test the latest MAJOR.MINOR.x to reduce the test matrix.
  #
  # Maintenance note: This should be updated for newer MAJOR.MINOR releases.
  versions: '3.0.2 || 3.1.2 || 3.2.0 || 3.3.0 || 3.4.1 || 3.5.0 || 3.6.8 || 3.7.0 || 3.8.2 || 3.9.0 || ^3.10.2'
  commands: node test/instrumentation/modules/apollo-server-express.test.js

express-queue:
  versions: '>=0.0.11'
  commands: node test/instrumentation/modules/express-queue.test.js

koa-router-v5-v11:
  name: koa-router
  versions: '>=5.2.0 <11'
  node: '>=6.0.0'
  peerDependencies: koa@2
  commands: node test/instrumentation/modules/koa-router/old-name.test.js
koa-router:
  name: koa-router
  versions: '>=11 <13'
  node: '>=12.0.0'
  peerDependencies: koa@2
  commands: node test/instrumentation/modules/koa-router/old-name.test.js

'@koa/router-v8-v11':
  name: '@koa/router'
  versions: '>=8 <11'
  node: '>=8.0.0'
  peerDependencies: koa@2
  commands: node test/instrumentation/modules/koa-router/new-name.test.js
'@koa/router':
  name: '@koa/router'
  versions: '>=11 <13'
  node: '>=12.0.0'
  peerDependencies: koa@2
  commands: node test/instrumentation/modules/koa-router/new-name.test.js

elasticsearch:
  versions: '>=8.0.0'
  commands: node test/instrumentation/modules/elasticsearch.test.js

# @elastic/elasticsearch
# - Version 7.7.0 included a change that broke usage with Node.js < 10.
#   Fixed in 7.7.1: https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/changelog-client.html#_7_7_1
#   Note: When this repo drops Node.js v8 support, `versions` can be simplified.
# - Version 7.12.0 dropped support for node v8.
# - Version 8.0.0 dropped node v10 support.
# - Version 8.2.0 dropped node v12 support.
#   - Skip "8.2.0" because https://github.com/elastic/elasticsearch-js/pull/1688
#   - The ES client team uses "8.2.0-patch.N" for patch releases *after*
#     "8.2.0" because they are stuck with stack version numbers. However,
#     semver (and TAV) consider "-patch.N" to be a *prereleases*. This
#     leads to some tortured "versions:" ranges below.
'@elastic/elasticsearch-v7.0-v7.12':
  name: '@elastic/elasticsearch'
  versions: '>=7.0.0 <7.7.0 || >7.7.0 <7.12.0'
  commands: node test/instrumentation/modules/@elastic/elasticsearch.test.js
'@elastic/elasticsearch-v7.12-v8.2':
  name: '@elastic/elasticsearch'
  versions: '>=7.12.0 <8.2'
  node: '>=12.0.0'
  commands: node test/instrumentation/modules/@elastic/elasticsearch.test.js
'@elastic/elasticsearch-v8.2-':
  name: '@elastic/elasticsearch'
  versions: '>=8.2.0-patch.1 <8.2.0 || >8.2.0'
  node: '>=14.0.0'
  commands: node test/instrumentation/modules/@elastic/elasticsearch.test.js

# @elastic/elasticsearch-canary *sometimes* gets releases in advance of
# '@elastic/elasticsearch'. It is only the latest such release that
# might matter. The point in testing it is to try to make sure the agent is
# updated for coming changes to the non-canary package.
'@elastic/elasticsearch-canary':
  name: '@elastic/elasticsearch-canary'
  versions: '>=8.2.0-canary.2'
  node: '>=14'
  commands: node test/instrumentation/modules/@elastic/elasticsearch-canary.test.js

handlebars:
  versions: '*'
  commands: node test/instrumentation/modules/handlebars.test.js
# Pug v3 dropped node v8 support (https://github.com/pugjs/pug/releases/tag/pug%403.0.0).
pug-v2:
  name: 'pug'
  versions: '0.1.0 || >2.0.0 <3.0.0'
  commands: node test/instrumentation/modules/pug.test.js
pug:
  name: 'pug'
  versions: '>=3.0.0'
  node: '>8'
  commands: node test/instrumentation/modules/pug.test.js

# @hapi/hapi
# - Package name: Starting with v17.9.0 and v18.2.0 the name changed from
#   'hapi' to '@hapi/hapi'. Instrumentation for the old 'hapi' is now deprecated
#   and untested; it will be dropped in the next major version of the agent.
# - Node version compat:
#   - @hapi/hapi@19: supports node >=v12 (judging from commit 50d8d7d)
#   - @hapi/hapi@20: appears (from travis template refs) to support node >=v12
'@hapi/hapi-v17-v18':
  name: '@hapi/hapi'
  versions: '>=17.0.0 <19.0.0'
  node: '>=8.12.0'
  commands:
    - node test/instrumentation/modules/hapi/basic.test.js
    - node test/instrumentation/modules/hapi/set-framework-hapihapi.test.js
'@hapi/hapi':
  name: '@hapi/hapi'
  versions: '>=19.0.0'
  node: '>=12'
  commands:
    - node test/instrumentation/modules/hapi/basic.test.js
    - node test/instrumentation/modules/hapi/set-framework-hapihapi.test.js

tedious-v1-v11:
  name: tedious
  node: '>=6'
  # - tedious@4.0.0 was broken, fixed in 4.0.1 by https://github.com/tediousjs/tedious/commit/4eceb48
  versions: '^1.9.0 || 2.x || 3.x || ^4.0.1 || 5.x || 6.x || 7.x || 8.x || 9.x || 10.x'
  commands: node test/instrumentation/modules/tedious.test.js

tedious-v11-v12:
  name: tedious
  node: '>=10.17.0'
  versions: '11.x'
  commands: node test/instrumentation/modules/tedious.test.js

tedious-v12-v15:
  name: tedious
  node: '>=12.3.0'
  versions: '12.x || 13.x || 14.x'
  commands: node test/instrumentation/modules/tedious.test.js

tedious:
  name: tedious
  node: '>=14'
  versions: '15.x'
  commands: node test/instrumentation/modules/tedious.test.js

cassandra-driver:
  # 3.1.0 is broken
  versions: '>=3 <3.1.0 || >3.1.0 <5'
  commands: node test/instrumentation/modules/cassandra-driver/index.test.js

restify-old:
  name: restify
  versions: '>=5.2.0 <8.0.0'
  commands:
    - node test/instrumentation/modules/restify/basic.test.js
    - node test/instrumentation/modules/restify/set-framework.test.js
restify-new:
  name: restify
  node: '>=8.6.0'
  versions: '>=8.0.0'
  commands:
    - node test/instrumentation/modules/restify/basic.test.js
    - node test/instrumentation/modules/restify/set-framework.test.js

# https://www.fastify.io/docs/latest/LTS/
# - #1086 suggests fastify@2.4.0 was a broken release, skip it.
# - fastify@4.0.1 is broken: https://github.com/fastify/fastify/issues/3998#issuecomment-1153662513
fastify-v1:
  name: fastify
  versions: '1.x'
  node: '>=6 <12'
  commands:
    - node test/instrumentation/modules/fastify/fastify.test.js
    - node test/instrumentation/modules/fastify/async-await.test.js
    - node test/instrumentation/modules/fastify/set-framework.test.js
fastify-v2:
  name: fastify
  versions: '>=2.0.0 <2.4.0 || >2.4.0 <3'
  node: '>=6 <15'
  commands:
    - node test/instrumentation/modules/fastify/fastify.test.js
    - node test/instrumentation/modules/fastify/async-await.test.js
    - node test/instrumentation/modules/fastify/set-framework.test.js
fastify-v3:
  name: fastify
  versions: '>=3.0.0 <4'
  node: '>=10'
  commands:
    - node test/instrumentation/modules/fastify/fastify.test.js
    - node test/instrumentation/modules/fastify/async-await.test.js
    - node test/instrumentation/modules/fastify/set-framework.test.js
fastify:
  name: fastify
  versions: '>=4 <4.0.1 || >4.0.1'
  node: '>=14.6.0'
  commands:
    - node test/instrumentation/modules/fastify/fastify.test.js
    - node test/instrumentation/modules/fastify/async-await.test.js
    - node test/instrumentation/modules/fastify/set-framework.test.js

finalhandler:
  versions: '*'
  commands: node test/instrumentation/modules/finalhandler.test.js

memcached:
  versions: '>=2.2.0'
  commands: node test/instrumentation/modules/memcached.test.js

body-parser:
  versions: '>=1.19.0'
  commands:
    - node test/sanitize-field-names/express.test.js

aws-sdk:
  # We want this version range:
  #   versions: '>=2.858 <3'
  # However, awk-sdk releases *very* frequently (almost every day) and there
  # is no need to test *all* those releases. Instead we statically list a subset
  # of versions to test.
  #
  # Maintenance note: This should be updated periodically using:
  #   ./dev-utils/aws-sdk-tav-versions.sh
  #
  # Test v2.858.0, every N=72 of 365 releases, and current latest.
  versions: '2.858.0 || 2.930.0 || 2.1002.0 || 2.1074.0 || 2.1146.0 || 2.1218.0 || 2.1222.0 || >2.1222.0 <3'
  commands:
    - node test/instrumentation/modules/aws-sdk/aws4-retries.test.js
    - node test/instrumentation/modules/aws-sdk/s3.test.js
    - node test/instrumentation/modules/aws-sdk/sns.test.js
    - node test/instrumentation/modules/aws-sdk/sqs.test.js
    - node test/instrumentation/modules/aws-sdk/dynamodb.test.js

# - undici@4.7.0 added its diagnostics_channel support.
# - In undici@4.7.1 the `request.origin` property was added, which we need
#   in the 'undici:request:create' diagnostic message.
undici:
  versions: '>=4.7.1 <6'
  commands: node test/instrumentation/modules/undici/undici.test.js
  node: '>=12.18'
