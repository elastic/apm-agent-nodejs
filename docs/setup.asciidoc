[[advanced-setup]]

ifdef::env-github[]
NOTE: For the best reading experience,
please view this documentation at https://www.elastic.co/guide/en/apm/agent/nodejs/current/advanced-setup.html[elastic.co]
endif::[]

== Advanced Setup and Configuration

[float]
[[starting-the-agent]]
=== Starting the agent

IMPORTANT: The Elastic APM agent for Node.js needs to be started as the first thing in your application - *before any other module is required/imported*.
This means that you should probably require and start it in your applications main file (usually `index.js`, `server.js`, or `app.js`).

There are two ways to start the Elastic APM agent for Node.js:

* Require the `elastic-apm-node` module and call the <<apm-start,`start`>> function on the returned agent:
+
[source,js]
----
var apm = require('elastic-apm-node').start({
  // add configuration options here
})
----
* Require the `elastic-apm-node/start` script:
+
[source,js]
----
var apm = require('elastic-apm-node/start')
----
+
If using this approach,
you can't configure the agent by passing in an options object,
but instead have to rely on <<configuring-the-agent,one of the other methods of configuration>>.

NOTE: If you are using Babel, you need to use the `elastic-apm-node/start` approach.
<<es-modules,Read more>>.

[float]
[[configuring-the-agent]]
=== Configuring the agent

There are three ways to configure the Node.js agent:

1. If calling the <<apm-start,`start`>> function,
you can supply a configurations object as the first argument.
The option parameters given here will take precedence over config options provided by other means

2. If a given config option is not provided in the call to the <<apm-start,`start`>> function (or if requiring the `elastic-apm-node/start` script),
the agent will look for the config option in the optional <<agent-configuration-file,agent configuration file>>

3. If a config option is not provided in any of the above means,
the agent will look for its associated environment variable.
You can see the expected names of these environment variables in the documentation for the <<apm-start,`start`>> options below

For information on the available configuration properties, see the <<apm-start,API reference>>.

[float]
[[agent-configuration-file]]
==== Agent configuration file

The Node.js agent will look for a file named `elastic-apm-node.js` in the current working directory. You can specify a custom path for this file using
the `ELASTIC_APM_CONFIG_FILE` environment variable (this path must include the filename), e.g:

[source,bash]
----
ELASTIC_APM_CONFIG_FILE=/path/to/elastic-apm-node.js
----

The configuration file is expected to export an object following the same conventions as the `options` object given as the first argument
to the <<apm-start,`start`>> function, e.g:

[source,js]
----
module.exports = {
  // Set required service name (allowed characters: a-z, A-Z, 0-9, -, _, and space)
  serviceName: '',

  // Use if APM Server requires a token
  secretToken: '',

  // Set custom APM Server URL (default: http://localhost:8200)
  serverUrl: ''
}
----

[float]
[[es-modules]]
=== Babel / ES Modules support

If you are using ES Modules,
for instance with the help of Babel,
all import statements are evaluated prior to calling any functions.
In that case you can't configure the agent by passing a configuration object to the `start` function,
as this call will happen after all the modules have been loaded.
Instead you need to import the `elastic-apm-node/start` module:

[source,js]
----
import apm from 'elastic-apm-node/start'
----

Then either configure the agent using the environment variables associated with each <<apm-start,config option>>,
or use the optional <<agent-configuration-file,agent configuration file>>.
