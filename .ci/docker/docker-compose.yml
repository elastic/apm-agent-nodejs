version: '2.1'

services:
  postgres:
    user: postgres
    image: postgres:9.6
    ports:
      - "5432:5432"
    volumes:
      - nodepgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_DB: 'test_elastic_apm'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 1s
      timeout: 10s
      retries: 30

  mongodb:
    image: mongo:5
    ports:
      - "27017:27017"
    volumes:
      - nodemongodata:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--quiet"]
      interval: 1s
      timeout: 10s
      retries: 30

  mssql:
    image: mcr.microsoft.com/mssql/server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Very(!)Secure
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - nodemssqldata:/var/opt/mssql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "mssql", "-U", "sa", "-P", "Very(!)Secure", "-Q", "select 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    ports:
      - "3306:3306"
    volumes:
      - nodemysqldata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysql" ,"-h", "mysql", "-P", "3306", "-u", "root", "-e", "SELECT 1"]
      interval: 1s
      timeout: 10s
      retries: 30

  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 10s
      retries: 30

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "network.host=_site_"
      - "transport.host=127.0.0.1"
      - "http.host=0.0.0.0"
      - "xpack.security.enabled=false"
    ports:
      - "9200:9200"
    volumes:
      - nodeesdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  cassandra:
    # Avoid the latest cassandra:3 until
    # https://issues.apache.org/jira/browse/CASSANDRA-17581 is resolved and
    # released to https://hub.docker.com/_/cassandra?tab=tags
    image: cassandra:3.11.11
    environment:
      MAX_HEAP_SIZE: "1G"
      HEAP_NEWSIZE: 400m
    ports:
      - "9042:9042"
    volumes:
      - nodecassandradata:/var/lib/cassandra
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 30s
      timeout: 10s
      retries: 5

  memcached:
    image: memcached:alpine
    user: "11211"
    ports:
      - "11211:11211"
    healthcheck:
      test: ["CMD", "nc", "127.0.0.1:11211", "-z"]
      interval: 30s
      timeout: 10s
      retries: 5

  localstack:
    # https://hub.docker.com/r/localstack/localstack/tags
    image: localstack/localstack:3.0.0
    environment:
      # Cannot use the default `localhost.localstack.cloud:4566` which, IIUC,
      # relies on reaching out the external DNS for resolution.
      # https://docs.localstack.cloud/getting-started/faq/#is-using-localhostlocalstackcloud4566-to-set-as-the-endpoint-for-aws-services-recommended
      - LOCALSTACK_HOST=localstack:4566
      # Cannot use the default 'SQS_ENDPOINT_STRATEGY=standard' which relies on
      # `*.localhost.localstack.cloud` resolution.
      # https://docs.localstack.cloud/user-guide/aws/sqs/#queue-urls
      - SQS_ENDPOINT_STRATEGY=path
      - DATA_DIR=/var/lib/localstack
    ports:
      - "4566:4566"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - nodelocalstackdata:/var/lib/localstack

  zookeeper:
    # https://hub.docker.com/r/bitnami/zookeeper/tags
    image: bitnami/zookeeper:3.9.1
    ports:
      - "2181:2181"
    volumes:
      - nodezookeeperdata:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    # https://hub.docker.com/r/bitnami/kafka/tags
    image: bitnami/kafka:3.3.2
    ports:
      - "9093:9093"
    volumes:
      - nodekafkadata:/var/lib/kafka/data
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_DELETE_TOPIC_ENABLE=true
    depends_on:
      - zookeeper
    healthcheck:
      # Kafka healthcheck ideas from https://github.com/wurstmeister/kafka-docker/issues/167
      test: kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  nodepgdata:
    driver: local
  nodemongodata:
    driver: local
  nodemssqldata:
    driver: local
  nodemysqldata:
    driver: local
  nodeesdata:
    driver: local
  nodecassandradata:
    driver: local
  nodelocalstackdata:
    driver: local
  nodekafkadata:
    driver: local
  nodezookeeperdata:
    driver: local
